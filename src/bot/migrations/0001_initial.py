# Generated by Django 4.2.4 on 2023-09-07 07:14

import ckeditor.fields
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models

import bot.validators


class Migration(migrations.Migration):
    """Migrations for bot."""

    initial = True

    dependencies = [
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Coordinator",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "first_name",
                    models.CharField(
                        help_text="Введите имя регионального координатора",
                        max_length=200,
                        verbose_name="Имя",
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        help_text="Введите фамилию регионального координатора",
                        max_length=200,
                        verbose_name="Фамилия",
                    ),
                ),
                (
                    "region",
                    models.OneToOneField(
                        help_text="Выберите регион из списка",
                        on_delete=django.db.models.deletion.PROTECT,
                        primary_key=True,
                        related_name="coordinators",
                        serialize=False,
                        to="core.region",
                        verbose_name="Регион",
                    ),
                ),
                (
                    "email_address",
                    models.EmailField(
                        help_text="Введите адрес электронной почты",
                        max_length=254,
                        unique=True,
                        verbose_name="Email",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        help_text="Введите номер телефона регионального координатора",
                        max_length=20,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Введите номер телефона в формате: +7 (777) 777-77-77",
                                regex="^[\\+]?[7, 8][-\\s\\.]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{2}[-\\s\\.]?[0-9]{2}$",
                            )
                        ],
                        verbose_name="Номер телефона",
                    ),
                ),
                (
                    "telegram_account",
                    models.CharField(
                        blank=True,
                        help_text="Введите телеграмм-аккаунт регионального координатора",
                        max_length=32,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Введите название аккаунта telegram в формате: username",
                                regex="^[\\w\\_]{5,32}$",
                            )
                        ],
                        verbose_name="Telegram",
                    ),
                ),
                (
                    "is_chief",
                    models.BooleanField(
                        default=False,
                        validators=[bot.validators.validate_is_chief],
                        verbose_name="Главный",
                    ),
                ),
            ],
            options={
                "verbose_name": "Координатор",
                "verbose_name_plural": "Координаторы",
                "ordering": ("-is_chief", "last_name"),
            },
        ),
        migrations.CreateModel(
            name="ProxyRegion",
            fields=[],
            options={
                "verbose_name": "Регион",
                "verbose_name_plural": "Регионы",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("core.region",),
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "question",
                    models.CharField(
                        help_text="Введите вопрос, не более 200 символов",
                        max_length=200,
                        verbose_name="Вопрос",
                    ),
                ),
                (
                    "answer",
                    ckeditor.fields.RichTextField(
                        help_text="Введите ответ на вопрос, не более 3896 символов",
                        max_length=3896,
                        verbose_name="Ответ",
                    ),
                ),
                (
                    "short_description",
                    models.CharField(
                        help_text="Введите название кнопки в боте для данного вопроса",
                        max_length=20,
                        verbose_name="Текст на кнопке",
                    ),
                ),
                (
                    "question_type",
                    models.CharField(
                        choices=[
                            ("LEGAL_ASSISTANCE", "Юридическая помощь"),
                            ("SOCIAL_ASSISTANCE", "Социальная помощь"),
                            (
                                "PSYCHOLOGICAL_ASSISTANCE",
                                "Психологическая помощь",
                            ),
                        ],
                        default="LEGAL_ASSISTANCE",
                        help_text="Выберите тип помощи для вопроса",
                        max_length=100,
                        verbose_name="Тип вопроса",
                    ),
                ),
                (
                    "regions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Выберите регион(ы) для вопроса",
                        related_name="questions",
                        to="core.region",
                        verbose_name="Регионы",
                    ),
                ),
            ],
            options={
                "verbose_name": "Вопрос",
                "verbose_name_plural": "Вопросы",
                "ordering": ("question",),
            },
        ),
        migrations.CreateModel(
            name="FundProgram",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "title",
                    models.CharField(
                        help_text="Введите название программы фонда, не более 200 символов",
                        max_length=200,
                        unique=True,
                        verbose_name="Название",
                    ),
                ),
                (
                    "fund_text",
                    ckeditor.fields.RichTextField(
                        help_text="Введите описание программы, не более 3896 символов",
                        max_length=3896,
                        verbose_name="Описание программы",
                    ),
                ),
                (
                    "short_description",
                    models.CharField(
                        help_text="Введите название кнопки в боте для данной программы",
                        max_length=20,
                        verbose_name="Текст на кнопке",
                    ),
                ),
                (
                    "regions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Выберите регион(ы) для программы",
                        related_name="programs",
                        to="core.region",
                        verbose_name="Регионы",
                    ),
                ),
            ],
            options={
                "verbose_name": "Программа фонда",
                "verbose_name_plural": "Программы фонда",
                "ordering": ("title",),
            },
        ),
    ]
