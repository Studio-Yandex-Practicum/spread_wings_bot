# Generated by Django 4.2.3 on 2023-08-22 05:21

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Coordinator",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "first_name",
                    models.CharField(max_length=200, verbose_name="Имя"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=200, verbose_name="Фамилия"),
                ),
                (
                    "region",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        primary_key=True,
                        related_name="coordinators",
                        serialize=False,
                        to="core.region",
                        verbose_name="Регион",
                    ),
                ),
                (
                    "email_address",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Email"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Введите номер телефона в формате: +7 777 777 77 77",
                                regex="^[\\+]?[7, 8][-\\s\\.]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{2}[-\\s\\.]?[0-9]{2}$",
                            )
                        ],
                        verbose_name="Номер телефона",
                    ),
                ),
                (
                    "telegram_account",
                    models.CharField(
                        blank=True,
                        max_length=32,
                        null=True,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Введите название аккаунта telegram в формате: username",
                                regex="^[\\w\\_]{5,32}$",
                            )
                        ],
                        verbose_name="Telegram",
                    ),
                ),
            ],
            options={
                "verbose_name": "Координатор",
                "verbose_name_plural": "Координаторы",
                "ordering": ("last_name",),
            },
        ),
        migrations.CreateModel(
            name="ProxyRegion",
            fields=[],
            options={
                "verbose_name": "Регион",
                "verbose_name_plural": "Регионы",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("core.region",),
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "question",
                    models.CharField(max_length=200, verbose_name="Вопрос"),
                ),
                (
                    "answer",
                    models.CharField(max_length=3856, verbose_name="Ответ"),
                ),
                (
                    "short_description",
                    models.CharField(
                        max_length=20, verbose_name="Короткое описание"
                    ),
                ),
                (
                    "question_type",
                    models.CharField(
                        choices=[
                            ("LEGAL_ASSISTANCE", "Юридическая помощь"),
                            ("SOCIAL_ASSISTANCE", "Социальная помощь"),
                            (
                                "PSYCHOLOGICAL_ASSISTANCE",
                                "Психологическая помощь",
                            ),
                            ("COMMON_QUESTION", "Общий вопрос"),
                        ],
                        default="LEGAL_ASSISTANCE",
                        max_length=100,
                        verbose_name="Тип вопроса",
                    ),
                ),
                (
                    "regions",
                    models.ManyToManyField(
                        blank=True,
                        related_name="questions",
                        to="core.region",
                        verbose_name="Регионы",
                    ),
                ),
            ],
            options={
                "verbose_name": "Вопрос",
                "verbose_name_plural": "Вопросы",
                "ordering": ("question",),
            },
        ),
        migrations.CreateModel(
            name="FundProgram",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "title",
                    models.CharField(
                        max_length=200, unique=True, verbose_name="Название"
                    ),
                ),
                (
                    "fund_text",
                    models.TextField(
                        max_length=4096, verbose_name="Описание программы"
                    ),
                ),
                (
                    "short_description",
                    models.CharField(
                        max_length=20, verbose_name="Короткое описание"
                    ),
                ),
                (
                    "regions",
                    models.ManyToManyField(
                        blank=True,
                        related_name="programs",
                        to="core.region",
                        verbose_name="Регионы",
                    ),
                ),
            ],
            options={
                "verbose_name": "Программа фонда",
                "verbose_name_plural": "Программы фонда",
                "ordering": ("title",),
            },
        ),
    ]
